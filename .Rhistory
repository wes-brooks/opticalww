indx = which(glri$Site==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~glri[[p]][indx]*log10(glri$DOCResult[indx]), dist='gaussian')$table[2,'z']
z.score[[ev]][[p]] = summary(m)$table[2,'z']
#t.score[[ev]][[p]] = summary(lm(glri$DOCResult[indx]~glri[[p]][indx]))$coefficients[2,'t value']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
z.score = list()
t.score = list()
chi2.score = list()
for (ev in unique(glri$Site)) {
z.score[[ev]] = list()
#t.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(glri$Site==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~glri[[p]][indx]*log10(glri$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
#t.score[[ev]][[p]] = summary(lm(glri$DOCResult[indx]~glri[[p]][indx]))$coefficients[2,'t value']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore = matrix(NA, 0, length(predictors))
for(ev in unique(glri$Site))
zscore = rbind(zscore, unlist(z.score[[ev]]))
# tscore = matrix(NA, 0, length(predictors))
# for(ev in unique(glri$Site))
#     tscore = rbind(tscore, unlist(t.score[[ev]]))
chi2score = matrix(NA, 0, length(predictors))
for(ev in unique(glri$Site))
chi2score = rbind(chi2score, unlist(chi2.score[[ev]]))
colMeans(chi2score)
colMeans(chi2score) %>% sort
m
summary(m)
View(ssum)
z.score = list()
chi2.score = list()
for (ev in unique(ssSum$event)) {
z.score[[ev]] = list()
chi2.score[[ev]]
indx = which(ssSum$event==ev)
for (p in predictors)
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~ssSum[[p]][indx]*log10(ssSum$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
load("data/dfOptAnalysisDataSSJan2015.RData")
ssSum = dfOptSumAll
predictors = names(ssSum)[47:ncol(ssSum)]
View(ssSum)
load("data/dfOptAnalysisDataSSJan2015.RData")
ssSum = dfOptSumAll
predictors = names(ssSum)[which(names(ssSum)=="OB1"):ncol(ssSum)]
ssSum$human.tot = ssSum$Bac.human + ssSum$Lachno.2
lim.detect = c(Lachno.2=225, Bac.human=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(ssSum$Bac.human <= lim.detect['Bac.human'], TRUE, FALSE)
lachno.censored = ifelse(ssSum$Lachno.2 <= lim.detect['Lachno.2'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['Bac.human']+lim.detect['Lachno.2'],
ifelse(bacteroides.censored, ssSum$Lachno.2 + lim.detect['Bac.human'],
ifelse(lachno.censored, ssSum$Bac.human + lim.detect['Lachno.2'],
ssSum$Bac.human+ssSum$Lachno.2 )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, ssSum$Lachno.2,
ifelse(lachno.censored, ssSum$Bac.human,
ssSum$Bac.human+ssSum$Lachno.2)))
z.score = list()
chi2.score = list()
for (ev in unique(ssSum$event)) {
z.score[[ev]] = list()
chi2.score[[ev]]
indx = which(ssSum$event==ev)
for (p in predictors)
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~ssSum[[p]][indx]*log10(ssSum$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
zscore = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
zscore = rbind(zscore, unlist(z.score[[ev]]))
chi2score = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
chi2score = rbind(chi2score, unlist(chi2.score[[ev]]))
colMeans(chi2score)
chi2score
p
indx
colMeans(zscore) %>% sort
unique(ssSum$event)
ev
z.score = list()
chi2.score = list()
for (ev in unique(ssSum$event)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(ssSum$event==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~ssSum[[p]][indx]*log10(ssSum$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
zscore = rbind(zscore, unlist(z.score[[ev]]))
chi2score = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
chi2score = rbind(chi2score, unlist(chi2.score[[ev]]))
colMeans(chi2score)
colMeans(chi2score) %>% sort
colMeans(zscore) %>% sort
colMeans(zscore) %>% abs %>% sort
colMeans(zscore) %>% hist
m
summary(m)
load("data/GLRIOptSummaryJan072015.RData")
glriSumm = dfOptSumAll
predictors = names(glriSumm)[which(names(glriSumm)=="OB1"):ncol(glriSumm)]
glriSumm$human.tot = glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml
lim.detect = c(lachno=225, bachum=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(glriSumm$BACHUM.cn.100mls <= lim.detect['bachum'], TRUE, FALSE)
lachno.censored = ifelse(glriSumm$Lachno.2.cn.100ml <= lim.detect['lachno'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['bachum']+lim.detect['lachno'],
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml + lim.detect['Bac.human'],
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls + lim.detect['Lachno.2'],
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml,
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls,
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml)))
z.score = list()
chi2.score = list()
for (ev in unique(glriSumm$Site)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(glriSumm$Site==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~glriSumm[[p]][indx]*log10(glriSum$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
load("data/GLRIOptSummaryJan072015.RData")
glriSumm = dfOptSumAll
predictors = names(glriSumm)[which(names(glriSumm)=="OB1"):ncol(glriSumm)]
glriSumm$human.tot = glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml
lim.detect = c(lachno=225, bachum=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(glriSumm$BACHUM.cn.100mls <= lim.detect['bachum'], TRUE, FALSE)
lachno.censored = ifelse(glriSumm$Lachno.2.cn.100ml <= lim.detect['lachno'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['bachum']+lim.detect['lachno'],
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml + lim.detect['Bac.human'],
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls + lim.detect['Lachno.2'],
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml,
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls,
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml)))
z.score = list()
chi2.score = list()
for (ev in unique(glriSumm$Site)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(glriSumm$Site==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~glriSumm[[p]][indx]*log10(glriSumm$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore = matrix(NA, 0, length(predictors))
for(ev in unique(glriSumm$Site))
zscore = rbind(zscore, unlist(z.score[[ev]]))
chi2score = matrix(NA, 0, length(predictors))
for(ev in unique(glriSumm$Site))
chi2score = rbind(chi2score, unlist(chi2.score[[ev]]))
ev
p
chi2score %>% colMeans %>% abs %>% sort
zscore %>% colMeans %>% abs %>% sort
load("data/dfOptAnalysisDataSSJan2015.RData")
ssSum = dfOptSumAll
predictors = names(ssSum)[which(names(ssSum)=="OB1"):ncol(ssSum)]
ssSum$human.tot = ssSum$Bac.human + ssSum$Lachno.2
lim.detect = c(Lachno.2=225, Bac.human=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(ssSum$Bac.human <= lim.detect['Bac.human'], TRUE, FALSE)
lachno.censored = ifelse(ssSum$Lachno.2 <= lim.detect['Lachno.2'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['Bac.human']+lim.detect['Lachno.2'],
ifelse(bacteroides.censored, ssSum$Lachno.2 + lim.detect['Bac.human'],
ifelse(lachno.censored, ssSum$Bac.human + lim.detect['Lachno.2'],
ssSum$Bac.human+ssSum$Lachno.2 )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, ssSum$Lachno.2,
ifelse(lachno.censored, ssSum$Bac.human,
ssSum$Bac.human+ssSum$Lachno.2)))
z.score = list()
chi2.score = list()
for (ev in unique(ssSum$event)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(ssSum$event==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~ssSum[[p]][indx]*log10(ssSum$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
zscore = rbind(zscore, unlist(z.score[[ev]]))
chi2score = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
chi2score = rbind(chi2score, unlist(chi2.score[[ev]]))
load("data/GLRIOptSummaryJan072015.RData")
glriSumm = dfOptSumAll
predictors = names(glriSumm)[which(names(glriSumm)=="OB1"):ncol(glriSumm)]
glriSumm$human.tot = glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml
lim.detect = c(lachno=225, bachum=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(glriSumm$BACHUM.cn.100mls <= lim.detect['bachum'], TRUE, FALSE)
lachno.censored = ifelse(glriSumm$Lachno.2.cn.100ml <= lim.detect['lachno'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['bachum']+lim.detect['lachno'],
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml + lim.detect['Bac.human'],
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls + lim.detect['Lachno.2'],
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml,
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls,
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml)))
z.score = list()
chi2.score = list()
for (ev in unique(glriSumm$Site)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(glriSumm$Site==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~glriSumm[[p]][indx]*log10(glriSumm$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore.gsum = matrix(NA, 0, length(predictors))
for(ev in unique(glriSumm$Site))
zscore.gsum = rbind(zscore.gsum, unlist(z.score[[ev]]))
chi2score.gsum = matrix(NA, 0, length(predictors))
for(ev in unique(glriSumm$Site))
chi2score.gsum = rbind(chi2score.gsum, unlist(chi2.score[[ev]]))
load("data/dfOptAnalysisDataSSJan2015.RData")
ssSum = dfOptSumAll
predictors = names(ssSum)[which(names(ssSum)=="OB1"):ncol(ssSum)]
ssSum$human.tot = ssSum$Bac.human + ssSum$Lachno.2
lim.detect = c(Lachno.2=225, Bac.human=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(ssSum$Bac.human <= lim.detect['Bac.human'], TRUE, FALSE)
lachno.censored = ifelse(ssSum$Lachno.2 <= lim.detect['Lachno.2'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['Bac.human']+lim.detect['Lachno.2'],
ifelse(bacteroides.censored, ssSum$Lachno.2 + lim.detect['Bac.human'],
ifelse(lachno.censored, ssSum$Bac.human + lim.detect['Lachno.2'],
ssSum$Bac.human+ssSum$Lachno.2 )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, ssSum$Lachno.2,
ifelse(lachno.censored, ssSum$Bac.human,
ssSum$Bac.human+ssSum$Lachno.2)))
z.score = list()
chi2.score = list()
for (ev in unique(ssSum$event)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(ssSum$event==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~ssSum[[p]][indx]*log10(ssSum$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore.ssum = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
zscore.ssum = rbind(zscore.ssum, unlist(z.score[[ev]]))
chi2score.ssum = matrix(NA, 0, length(predictors))
for(ev in unique(sSum$event))
chi2score.ssum = rbind(chi2score.ssum, unlist(chi2.score[[ev]]))
chi2score.ssum = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
chi2score.ssum = rbind(chi2score.ssum, unlist(chi2.score[[ev]]))
load("data/dfOptAnalysisDataSSJan2015.RData")
ssSum = dfOptSumAll
predictors = names(ssSum)[which(names(ssSum)=="OB1"):ncol(ssSum)]
ssSum$human.tot = ssSum$Bac.human + ssSum$Lachno.2
lim.detect = c(Lachno.2=225, Bac.human=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(ssSum$Bac.human <= lim.detect['Bac.human'], TRUE, FALSE)
lachno.censored = ifelse(ssSum$Lachno.2 <= lim.detect['Lachno.2'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['Bac.human']+lim.detect['Lachno.2'],
ifelse(bacteroides.censored, ssSum$Lachno.2 + lim.detect['Bac.human'],
ifelse(lachno.censored, ssSum$Bac.human + lim.detect['Lachno.2'],
ssSum$Bac.human+ssSum$Lachno.2 )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, ssSum$Lachno.2,
ifelse(lachno.censored, ssSum$Bac.human,
ssSum$Bac.human+ssSum$Lachno.2)))
z.score = list()
chi2.score = list()
for (ev in unique(ssSum$event)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(ssSum$event==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~ssSum[[p]][indx]*log10(ssSum$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore.ssum = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
zscore.ssum = rbind(zscore.ssum, unlist(z.score[[ev]]))
chi2score.ssum = matrix(NA, 0, length(predictors))
for(ev in unique(ssSum$event))
chi2score.ssum = rbind(chi2score.ssum, unlist(chi2.score[[ev]]))
load("data/GLRIOptSummaryJan072015.RData")
glriSumm = dfOptSumAll
predictors = names(glriSumm)[which(names(glriSumm)=="OB1"):ncol(glriSumm)]
glriSumm$human.tot = glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml
lim.detect = c(lachno=225, bachum=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(glriSumm$BACHUM.cn.100mls <= lim.detect['bachum'], TRUE, FALSE)
lachno.censored = ifelse(glriSumm$Lachno.2.cn.100ml <= lim.detect['lachno'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['bachum']+lim.detect['lachno'],
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml + lim.detect['Bac.human'],
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls + lim.detect['Lachno.2'],
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml,
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls,
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml)))
z.score = list()
chi2.score = list()
for (ev in unique(glriSumm$Site)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(glriSumm$Site==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~glriSumm[[p]][indx]*log10(glriSumm$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
zscore.gsum = matrix(NA, 0, length(predictors))
for(ev in unique(glriSumm$Site))
zscore.gsum = rbind(zscore.gsum, unlist(z.score[[ev]]))
chi2score.gsum = matrix(NA, 0, length(predictors))
for(ev in unique(glriSumm$Site))
chi2score.gsum = rbind(chi2score.gsum, unlist(chi2.score[[ev]]))
cbind(colMeans(zscore.gsum), colMeans(zscore.ssum))
cbind(colMeans(zscore.gsum), colMeans(zscore.ssum)) %>% plot
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% plot
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% geom.mean
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% geom
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% geomMean
gmean
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% apply(1, function(x) exp(mean(log(x))))
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% apply(1, function(x) exp(mean(log(x)))) %>% sort
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% apply(1, function(x) exp(mean(log(x)))) %>% sort %>% tail(4)
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% apply(1, function(x) exp(mean(log(x)))) %>% sort %>% tail(4) %>% names
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% apply(1, function(x) exp(mean(log(x)))) %>% sort %>% tail(4) %>% names -> nn
which(names(glriSum) %in% nn)
which(names(glriSumm) %in% nn)
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum))[377:380,] %>% plot
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% plot
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum))[377:380,]
which(predictors %in% nn)
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum))[121:124,] %>% plot
nn
survreg(Surv(log10(left), log10(right), event=event, type='interval')~glriSumm[[nn[1]]]*log10(glriSumm$DOCResult), dist='gaussian')
survreg(Surv(log10(left), log10(right), event=event, type='interval')~glriSumm[[nn[1]]]*log10(glriSumm$DOCResult), dist='gaussian') %>% sumary
survreg(Surv(log10(left), log10(right), event=event, type='interval')~glriSumm[[nn[1]]]*log10(glriSumm$DOCResult), dist='gaussian') %>% summary
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]] + log10(glriSumm$DOCResult), dist='gaussian') %>% summary
dim(glriSumm)
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% summary
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian'), log10(glriSumm$human.tot)) %>%
plot
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian'), log10(glriSumm$human.tot)) %>% plot
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict, log10(glriSumm$human.tot)) %>% plot
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict
dim(glriSumm)
glriSumm[,nn]
glriSumm$human.tot
ndx = which(!is.na(glriSumm$human.tot))
ndx
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict, log10(glriSumm$human.tot)[ndx]) %>% plot
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict, log10(glriSumm$human.tot)[ndx])
length(ndx)
which(is.na(glriSumm$human.tot))
dim(glriSumm)
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict
log10(glriSumm$DOCResult)
left
dim(glriSumm)
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian')$fitted
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict
right
load("data/GLRIOptSummaryJan072015.RData")
glriSumm = dfOptSumAll
predictors = names(glriSumm)[which(names(glriSumm)=="OB1"):ncol(glriSumm)]
glriSumm$human.tot = glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml
lim.detect = c(lachno=225, bachum=225)
#Set the range in which this observations's count may lie:
bacteroides.censored = ifelse(glriSumm$BACHUM.cn.100mls <= lim.detect['bachum'], TRUE, FALSE)
lachno.censored = ifelse(glriSumm$Lachno.2.cn.100ml <= lim.detect['lachno'], TRUE, FALSE)
event = ifelse(bacteroides.censored & lachno.censored, 2,
ifelse(bacteroides.censored | lachno.censored, 3, 1))
right = ifelse(bacteroides.censored & lachno.censored, lim.detect['bachum']+lim.detect['lachno'],
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml + lim.detect['bachum'],
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls + lim.detect['lachno'],
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml )))
left = ifelse(bacteroides.censored & lachno.censored, 450,
ifelse(bacteroides.censored, glriSumm$Lachno.2.cn.100ml,
ifelse(lachno.censored, glriSumm$BACHUM.cn.100mls,
glriSumm$BACHUM.cn.100mls + glriSumm$Lachno.2.cn.100ml)))
z.score = list()
chi2.score = list()
for (ev in unique(glriSumm$Site)) {
z.score[[ev]] = list()
chi2.score[[ev]] = list()
indx = which(glriSumm$Site==ev)
for (p in predictors) {
m = survreg(Surv(log10(left[indx]), log10(right[indx]), event=event[indx], type='interval')~glriSumm[[p]][indx]*log10(glriSumm$DOCResult[indx]), dist='gaussian')
z.score[[ev]][[p]] = summary(m)$table[2,'z']
chi2.score[[ev]][[p]] = summary(m)$chi
}
}
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% plot
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum)) %>% apply(1, function(x) exp(mean(log(x)))) %>% sort %>% tail(4) %>% names -> nn
nn
which(predictors %in% nn)
cbind(colMeans(chi2score.gsum), colMeans(chi2score.ssum))[121:124,] %>% plot
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict
ndx = which(!is.na(glriSumm$human.tot))
length(ndx)
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict, log10(glriSumm$human.tot)[ndx])
log10(glriSumm$human.tot)[ndx
]
log10(glriSumm$human.tot)[ndx]
log10(glriSumm$human.tot)[ndx] %>% length
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict %>% length
left
which.na(left)
which(is.na(left))
which(is.na(right))
which.na(log10(glriSumm$DOCResult))
which(is.na(log10(glriSumm$DOCResult)))
ndx
ndx[-25]
ndx[-25] -> ndx
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict, log10(glriSumm$human.tot)[ndx])
cbind(survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict, log10(glriSumm$human.tot)[ndx]) %>% plot
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict
?predict.survival
class(m)
?predict.survreg
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict(newdata=ssSumm)
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ (glriSumm[[nn[1]]] + glriSumm[[nn[2]]] + glriSumm[[nn[3]]] + glriSumm[[nn[4]]]) * log10(glriSumm$DOCResult), dist='gaussian') %>% predict(newdata=ssSum)
glriSumm$left = left
glriSumm$right = right
survreg(Surv(log10(left), log10(right), event=event, type='interval') ~ paste("(", paste(nn, collapse="+"), ") * log10(DOCResult)", sep=''), dist='gaussian')
paste("(", paste(nn, collapse="+"), ") * log10(DOCResult)", sep=''),
paste("(", paste(nn, collapse="+"), ") * log10(DOCResult)", sep='')
paste("Surv(log10(left), log10(right), event=event, type='interval') ~ (", paste(nn, collapse="+"), ") * log10(DOCResult)", sep='')
paste("Surv(log10(left), log10(right), event=event, type='interval') ~ (", paste(nn, collapse="+"), ") * log10(DOCResult)", sep='') %>% formula
paste("Surv(log10(left), log10(right), event=event, type='interval') ~ (", paste(nn, collapse="+"), ") * log10(DOCResult)", sep='') %>% formula -> ff
survreg(ff, data=glriSumm, dist='gaussian')
survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)
ssSum$rSag240_255_Sag350_400
rSag350_400_Sag240_255 = ssSum$rSag240_255_Sag350_400
rSag350_400_Sag240_255 = ssSum$rSag240_255_Sag350_400^(-1)
survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)
rSag290_350_Sag240_255 = rSag240_255_Sag290_350
ssSum$rSag290_350_Sag240_255 = ssSum$rSag240_255_Sag290_350
survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)
ssSum$rSag300_340_Sag240_255 = ssSum$rSag240_255_Sag300_340
survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)
ssSum$human_tot %>% log10
ssSum$human_tot
names(ssSum)
ssSum$human.tot %>% log10
survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)
ssSum$human.tot %>% log10 %>% length
cbind(ssSum$human.tot %>% log10, survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum))
cbind(ssSum$human.tot %>% log10, survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)) %>% plot
cbind(ssSum$human.tot %>% log10, survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)) %>% exp %>% plot
cbind(ssSum$human.tot %>% log10, survreg(ff, data=glriSumm, dist='gaussian') %>% predict(newdata=ssSum)) %>% plot
