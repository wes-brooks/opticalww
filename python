import os

from nolearn.convnet import ConvNetFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score
from sklearn.pipeline import Pipeline
from sklearn.utils import shuffle

import numpy as np

#Get data:
def get_dataset():
    eem_dir = '/home/wesley/imagenet/eem/'
    eem_imagefiles = [eem_dir + fn for fn in os.listdir(eem_dir) if ".png" in fn]
    labels = np.loadtxt(eem_dir + "labels.txt")
    return shuffle(eem_imagefiles, list(labels), random_state=0)

#Train a model:
DECAF_IMAGENET_DIR = "/home/wesley/imagenet/"
convnet = ConvNetFeatures(
    pretrained_params=DECAF_IMAGENET_DIR + 'imagenet.decafnet.epoch90',
    pretrained_meta=DECAF_IMAGENET_DIR + 'imagenet.decafnet.meta',
    )

clf = LinearRegression()
pl = Pipeline([
    ('convnet', convnet),
    ('clf', clf),
    ])

X, y = get_dataset()
X_train, y_train = X[:100], y[:100]
X_test, y_test = X[100:], y[100:]

print "Fitting..."
pl.fit(X_train, y_train)
print "Predicting..."
y_pred = pl.predict(X_test)
#print "Accuracy: %.3f" % accuracy_score(y_test, y_pred)


